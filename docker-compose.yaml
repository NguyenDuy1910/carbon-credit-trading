services:
  postgres:
    image: postgres:17.0-alpine
    ports:
      - ${DATABASE_PORT}:5432
    volumes:
      - boilerplate-db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}

    # mysqlDb
  mysql:
    image: mysql:8.0
    ports:
      - ${DATABASE_PORT}:3306
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USERNAME}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}

  maildev:
    build:
      context: .
      dockerfile: maildev.Dockerfile
    ports:
      - ${MAIL_CLIENT_PORT}:1080
      - ${MAIL_PORT}:1025

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  # Uncomment to use redis
  # redis:
  #   image: redis:7-alpine
  #   ports:
  #     - 6379:6379


  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: [ "redis-server", "--save", "60", "1", "--loglevel", "warning" ]
  # Zookeeper
  zookeeper:
    image: bitnami/zookeeper:latest
    environment:
      - ZOO_ENABLE_AUTH=no
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

    # Kafka Broker
  kafka:
      image: 'bitnami/kafka:3.7'
      container_name: kafka
      hostname: kafka
      restart: unless-stopped
      environment:
        - KAFKA_CFG_BROKER_ID=1
        - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
        - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092
        - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://192.168.10.148:9092
        - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
        - KAFKA_CFG_LOG_DIRS=/tmp/kafka-logs
        - KAFKA_CFG_NUM_PARTITIONS=1
        - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=1
      depends_on:
        - zookeeper
      ports:
        - "9092:9092"

    # Kafka UI
  kafka-ui:
      image: 'provectuslabs/kafka-ui:latest'
      container_name: kafka-ui
      restart: unless-stopped
      environment:
        - KAFKA_CLUSTERS_0_NAME=cluster1
        - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka:9092
        - KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL=PLAINTEXT
        - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
      ports:
        - "8081:8080"
      depends_on:
        - kafka
        - zookeeper
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - ${APP_PORT}:${APP_PORT}

volumes:
  boilerplate-db:
  mysql-data:
  redis-data:
